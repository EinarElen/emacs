(defvar themes-to-use (list "monokai" "solarized-dark" "solarized-light") "List of themes that will be loaded by choose-random-theme")
(defvar current-theme-used (list "monokai") "Current theme chosen by choose-random theme")
(defun choose-random-theme ()
  "Choose random theme from themes-to-use!"
  (interactive)
  (setq current-theme-number (random (length themes-to-use)))
  (when (= current-theme-number 0)
    (setq current-theme-used (list "monokai"))
    (load-theme 'monokai t))
  (when (= current-theme-number 1)
    (setq current-theme-used (list "solarized-dark"))
    (load-theme 'solarized-dark t))
  (when (= current-theme-number 2)
    (setq current-theme-used (list "solarized-light"))
    (load-theme 'solarized-light)))
(provide 'choose-random-theme)
